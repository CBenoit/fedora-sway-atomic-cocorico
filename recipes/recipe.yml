---
# yaml-language-server: $schema=https://schema.blue-build.org/recipe-v1.json
# Image will be published to ghcr.io/<user>/<name>.
name: atomic-kokoriko

# Description will be included in the image's metadata.
description: "Niri Atomic + minimal host + Toolbox dev stack (Rust/.NET/Node) with Helix & Nushell"

# The base image to build on top of (FROM) and the version tag to use.
# Use the smallest universal blue base rather than the sway‑flavoured variant.
base-image: ghcr.io/ublue-os/base-main
image-version: "42"

# The module configuration describes what is done to the base image.
# Modules are executed in order.
modules:
  # Drop in small system defaults (land in /usr/etc at runtime).
  - type: files
    files:
      - source: system
        destination: / # Copies files/system/* (* means everything inside it) into image's root folder /.

  # Retrieve the ironbar binary from the associated build stage.
  - type: copy
    from: build-ironbar
    src: /out/bin/ironbar
    dest: /usr/bin/

  # Install packages and remove unwanted ones via DNF.
  - type: dnf
    repos:
      copr:
        - atim/starship

    install:
      packages:
        # Common CLI utilities.
        - helix           # TUI editor on the host
        - nu              # Nushell
        - starship        # Shell prompt
        - zoxide          # Smarter cd
        - git
        - ripgrep
        - fd-find
        - wireshark-cli   # tshark + dumpcap
        - tcpdump
        - nmap

        # Lightweight Wayland terminal.
        - foot

        # Scrollable tiling wayland compositor.
        - niri

        # Application launcher.
        - fuzzel

        # Login manager.
        - greetd
        - gtkgreet
        - cage

        # Wallpaper setter.
        - swaybg

        # Screen locker.
        - swaylock
        - swayidle

        # Screen share / file pickers can be flaky without a portal backend.
        # Minimal & DE-agnostic:
        - xdg-desktop-portal
        - xdg-desktop-portal-gtk

        # Input method framework (IME) and addons.
        - fcitx5
        - fcitx5-gtk
        - fcitx5-qt
        - fcitx5-mozc     # Japanese input engine for Mozc
        - fcitx5-configtool

        # ironbar runtime libs
        - gtk4
        - gtk4-layer-shell
        # Icon theming & loaders for symbolic/tray icons
        - adwaita-icon-theme
        - hicolor-icon-theme
        - gdk-pixbuf2
        - gdk-pixbuf2-modules
        - librsvg2
        # Battery info (optional but helpful in VMs)
        - upower

        # Utilities for bar modules.
        - playerctl    # MPRIS control for music module.
        - wl-clipboard # Clipboard utility used by some ironbar modules.
        - nm-connection-editor # TODO: learn more about this.

        # Audio stack (PipeWire and its session manager) for volume control.
        - pipewire
        - wireplumber

        # GPU/DRM/Vulkan drivers (ensure EGL features are present)
        - mesa-dri-drivers
        - mesa-vulkan-drivers

        # Bluetooth stack.
        - bluez              # bluetoothd, bluetoothctl
        # - bluez-obexd        # OBEX file transfer (used by Blueman)
        # - blueman            # tray applet & pairing UI

        # Actively maintained PolicyKit agent
        - lxqt-policykit

        # Ensure we have the en_DK locale available.
        - glibc-langpack-en

        # Enable file pickers (portals)
        - xdg-desktop-portal-gtk # "Default fallback portal", implementing most of the basic functionnality.
        - xdg-desktop-portal-gnome # Required for niri screencasting support.
        - gnome-keyring # Implements the Secret portal, required for certain apps to work.

        # Notifications.
        - SwayNotificationCenter # swaync daemon + swaync-client

        # File Explorer.
        - nautilus # Nautilus is used as the default file picker by xdg-desktop-portal-gnome from version 47.0.
        - pcmanfm # I just prefer PCManFM otherwise.
        # TODO: Consider yazi as a terminal-based alternative

        # Day/night gamma adjustements for Wayland.
        - wlsunset

    remove:
      packages:
        # Remove Firefox in favour of the Zen browser flatpak.
        - firefox
        - firefox-langpacks

  # Default flatpaks for a minimal but usable desktop.
  # Zen Browser replaces Firefox.
  - type: default-flatpaks
    configurations:
      # System flatpaks we want all users to have and not remove.
      - notify: true # Send notification after install/uninstall is finished.
        scope: system
        install:
          - app.zen_browser.zen
          - org.gnome.Loupe
          - com.visualstudio.code
          - com.github.tchx84.Flatseal
          - io.github.flattool.Warehouse
          - org.wireshark.Wireshark # The flatpak itself does not support capture, but it’s possible to pipe tshark. 
          - net.cozic.joplin_desktop
          - org.kde.okular
          - io.mpv.Mpv
          - com.github.huluti.Curtail
          - org.jousse.vincent.Pomodorolm
          - com.logseq.Logseq

      # Also add Flathub user repo, but no user packages.
      - scope: user

  # Developer fonts.
  # JetBrains Mono Nerd Font provides the glyphs used by ironbar and the terminal.
  # NerdFontsSymbolsOnly ensures extra icons are available without pulling in entire fonts.
  - type: fonts
    fonts:
      nerd-fonts:
        - JetBrainsMono
        - FiraCode
        - NerdFontsSymbolsOnly

  # Provide ujust commands for provisioning dev container(s).
  - type: justfiles

  # Use Chezmoi to layer in dotfiles.
  # Disable init to avoid interfering with host files during build.
  # Dotfiles live at the referenced repository.
  - type: chezmoi
    disable-init: true
    all-users: false
    repository: "https://github.com/CBenoit/dotfiles"
    file-conflict-policy: skip

  # (Optional) If you need NVIDIA/other kernel modules later:
  # - type: akmods
  #   nvidia-driver: nvidia-open
  #   install: []

  - type: gschema-overrides
    include:
      # zz1- prefix ensures our defaults win over Fedora’s.
      - zz1-adwaita-dark.gschema.override

  - type: systemd
    system:
      enabled:
        - bluetooth.service
    user:
      enabled:
        - swaync.service
        - fcitx5.service
        - swaybg.service
        - swayidle.service
        - ironbar.service
        - ironbar_weather.timer
        - wlsunset.service

  # This sets up the proper policy & signing files for signed images to work fully.
  - type: signing

stages:
  # TODO: consider downloading from the GitHub release: https://github.com/JakeStanger/ironbar/releases/tag/v0.17.1
  - name: build-ironbar
    # Use Fedora 42 image to ensure we link against the correct libraries versions and ABIs (important for GTK apps).
    # Build on Fedora, run on Fedora.
    from: ghcr.io/ublue-os/base-main:42
    modules:
      - type: dnf
        install:
          packages:
            # Build tools.
            - rust
            - cargo
            - gcc

            # ironbar build deps.
            - gtk4-devel
            - gtk4-layer-shell-devel
            - dbus-devel
            - pkgconf-pkg-config
            - openssl-devel
            - pulseaudio-libs-devel
            - libinput-devel
            - luajit-devel
            - lua-lgi
            - atk-devel
      - type: script
        snippets:
          # Build straight from crates.io.
          - cargo install --locked ironbar --git https://github.com/JakeStanger/ironbar --rev 95612269b73cf9e2e2dd849d1667258ee1ee0d8d --root /out --no-default-features --features http,config+yaml,cli,battery,bluetooth,clipboard,clock,focused,music+mpris,network_manager,notifications,sys_info,tray,volume,workspaces+niri,script,custom
          # Probably not required, but strip the debug symbols.
          - strip /out/bin/ironbar
